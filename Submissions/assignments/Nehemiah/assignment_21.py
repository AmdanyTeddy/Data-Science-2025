# -*- coding: utf-8 -*-
"""Assignment 21.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OeBRpxsDisc3Q81secL8s3YMh5ItdjuF
"""

# üîê Password Vault ‚Äì Colab Version
# You may need to install the cryptography library first
!pip install cryptography

import json
import os
from cryptography.fernet import Fernet

# --- File Names ---
VAULT_FILE = 'vault_data.json'
KEY_FILE = 'key.key'

# --- Encryption Utilities ---
def generate_key():
    return Fernet.generate_key()

def save_key(key):
    with open(KEY_FILE, 'wb') as f:
        f.write(key)

def load_key():
    with open(KEY_FILE, 'rb') as f:
        return f.read()

def encrypt_password(password, key):
    return Fernet(key).encrypt(password.encode()).decode()

def decrypt_password(encrypted_password, key):
    return Fernet(key).decrypt(encrypted_password.encode()).decode()

# --- Vault Utilities ---
def initialize_key():
    if not os.path.exists(KEY_FILE):
        key = generate_key()
        save_key(key)
        print("[+] New encryption key generated and saved.")
    else:
        print("[*] Encryption key loaded.")
    return load_key()

def load_vault():
    if not os.path.exists(VAULT_FILE):
        return {}
    with open(VAULT_FILE, 'r') as f:
        return json.load(f)

def save_vault(vault):
    with open(VAULT_FILE, 'w') as f:
        json.dump(vault, f, indent=4)

def add_entry(vault, key):
    name = input("Enter service name (e.g. Gmail): ").strip()
    username = input("Enter username: ").strip()
    password = input("Enter password: ").strip()

    encrypted = encrypt_password(password, key)
    vault[name] = {
        "username": username,
        "password": encrypted
    }
    print(f"[+] Entry for '{name}' added.")
    save_vault(vault)

def retrieve_entry(vault, key):
    name = input("Enter service name to retrieve: ").strip()
    if name in vault:
        entry = vault[name]
        decrypted = decrypt_password(entry["password"], key)
        print(f"Username: {entry['username']}")
        print(f"Password: {decrypted}")
    else:
        print("[-] Entry not found.")

def delete_entry(vault):
    name = input("Enter service name to delete: ").strip()
    if name in vault:
        del vault[name]
        print(f"[+] Entry for '{name}' deleted.")
        save_vault(vault)
    else:
        print("[-] Entry not found.")

# --- CLI Menu ---
def run_vault():
    print("üîê Welcome to Your Password Vault (Colab Edition)")
    key = initialize_key()
    vault = load_vault()

    while True:
        print("\nOptions:")
        print("1. Add New Entry")
        print("2. Retrieve Entry")
        print("3. Delete Entry")
        print("4. Exit")
        choice = input("Choose an option (1-4): ").strip()

        try:
            if choice == '1':
                add_entry(vault, key)
            elif choice == '2':
                retrieve_entry(vault, key)
            elif choice == '3':
                delete_entry(vault)
            elif choice == '4':
                print("Goodbye! üëã")
                break
            else:
                print("Invalid choice. Try again.")
        except Exception as e:
            print(f"[!] Error: {e}")

# üîÅ Run the Vault App
run_vault()

