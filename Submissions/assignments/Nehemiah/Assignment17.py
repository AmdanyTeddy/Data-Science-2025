{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNXjmtebpwwAM4YZsCv3aPv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["- Data Abstraction, Class Definition, Class Instances, Methods\n","\n","- Write a class called Box that:\n","\n","  •\tHas attributes: length, width, height\n","  \n","  •\tHas a method get_volume() that returns the volume (length × width × height)\n","\n","  •\tHas a method is_cube() that returns True if all sides are equal\n","\n","  •\tHas a method bigger(other) that returns the box with a larger volume\n"],"metadata":{"id":"oB3aqsutk-rF"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-J1uKSZAkhtt","executionInfo":{"status":"ok","timestamp":1752843168141,"user_tz":-180,"elapsed":90,"user":{"displayName":"Nehemiah Kipchumba","userId":"09735398617109063840"}},"outputId":"2ec665e1-831f-4321-8050-52373364e8cc"},"outputs":[{"output_type":"stream","name":"stdout","text":["Box 1 volume: 24\n","Box 2 volume: 280\n","Is Box 1 a cube? False\n","Is Box 2 a cube? False\n","The bigger box has volume: 280\n"]}],"source":["\n","class Box:\n","  # Has attributes\n","    def __init__(self, length, width, height):\n","        self.length = length\n","        self.width = width\n","        self.height = height\n","\n","    # HAs a methods : get_volume(), is_cube() and bigger(other)\n","    def get_volume(self):\n","        return self.length * self.width * self.height\n","    def is_cube(self):\n","        return self.length == self.width == self.height\n","    def bigger(self, other_box):\n","        if self.get_volume() >= other_box.get_volume():\n","            return self\n","        else:\n","            return other_box\n","\n","\n","\n","box1 = Box(4, 3, 2)\n","box2 = Box(8, 5, 7)\n","\n","\n","print(\"Box 1 volume:\", box1.get_volume())\n","print(\"Box 2 volume:\", box2.get_volume())\n","\n","print(\"Is Box 1 a cube?\", box1.is_cube())\n","print(\"Is Box 2 a cube?\", box2.is_cube())\n","\n","\n","bigger_box = box1.bigger(box2)\n","print(\"The bigger box has volume:\", bigger_box.get_volume())"]},{"cell_type":"markdown","source":["- Practice instance attributes, conditionals, methods, and object interaction.\n","\n","- Write a class called Song that:\n","\n","  •\tHas attributes: title, artist, duration (in seconds)\n","\n","  •\tHas a method is_long() that returns True if the song is over 5 minutes (300 seconds)\n","\n","  •\tHas a method same_artist(other) that returns True if two songs have the same artist\n","\n","  •\tHas a method longer_song(other) that returns the song with the longer duration\n"],"metadata":{"id":"EevnTEKJmKCE"}},{"cell_type":"code","source":["class Song:\n","  # Has attributes: title, artist, and duration\n","  def __init__(self, title, artist, duration):\n","    self.title = title\n","    self.artist = artist\n","    self.duration = duration\n","\n","  # Has methods : is_long(), same_artist() and longer_song(other)\n","  def is_long(self):\n","    return self.duration > 300\n","\n","  def same_artist(self, other_song):\n","    return self.artist == other_song.same_artist\n","\n","  def longer_song(self, other_song):\n","    if self.duration >= other_song.duration:\n","      return self\n","    else:\n","      return other_song\n","\n","# call your function\n","song1 = Song(\"Remember\", \"Asake\", 330)\n","song2 = Song(\"T-Shirt\", \"Migos\", 527)\n","print(\"Is song1 long?\", song1.is_long())\n","print(\"Is song2 long?\", song2.is_long())\n","\n","print(\"Same artist\", song1.same_artist(song2))\n","\n","longer = song1.longer_song(song2)\n","print(\"The longer song is: \", longer.title)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q4h1JMgQmAAZ","executionInfo":{"status":"ok","timestamp":1752844071228,"user_tz":-180,"elapsed":47,"user":{"displayName":"Nehemiah Kipchumba","userId":"09735398617109063840"}},"outputId":"16df7043-3001-4a93-9346-dd54ee3ef952"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Is song1 long? True\n","Is song2 long? True\n","Same artist False\n","The longer song is:  T-Shirt\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"z3OEeAXEpe6D"},"execution_count":null,"outputs":[]}]}