{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNWOZcnbZW0egvtNFVb2cg1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["- Challenge 1: Lambda Magic – Multiples of 3\n","\n","- Problem:\n","      - Write a lambda function that checks if a number is a multiple of 3.(10 Marks)\n","\n","      - Lambda function to check multiple of 3"],"metadata":{"id":"Hkcxfyon3Fm9"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K3rSuSiV2xMK","executionInfo":{"status":"ok","timestamp":1752848185360,"user_tz":-180,"elapsed":7317,"user":{"displayName":"Nehemiah Kipchumba","userId":"09735398617109063840"}},"outputId":"6f4665f4-f72b-442e-ab0b-93d89c7c116b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number(69\n","Multiple of 3\n"]}],"source":["num = int(input(\"Enter a number: \"))\n","\n","is_multp_of_3 = lambda x: x % 3 == 0\n","if is_multp_of_3(num):\n","  print(\"Multiple of 3\")\n","\n","else:\n","  print(\"Not a multiple of 3\")"]},{"cell_type":"markdown","source":["- Challenge 2: Using sum() and len() with Lists\n","\n","- Problem A: Find the average of a list of numbers (10 marks)"],"metadata":{"id":"qiQ9gL2O3hbM"}},{"cell_type":"code","source":["# Function Signature:\n","def average(L):\n","    tl = sum(L)\n","    co = len(L)\n","    r = tl / co\n","    return r\n","\n","my_list = [4, 8, 10, 16, 20]\n","print(\"Average is:\", average(my_list))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"psfQwP923nYE","executionInfo":{"status":"ok","timestamp":1752848185375,"user_tz":-180,"elapsed":38,"user":{"displayName":"Nehemiah Kipchumba","userId":"09735398617109063840"}},"outputId":"661ca309-e3d5-4563-f609-14e1af788021"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Average is: 11.6\n"]}]},{"cell_type":"markdown","source":["- #Problem B: Find the total number of letters in a list of strings(10 Marks)"],"metadata":{"id":"lfoN9C0c3yOh"}},{"cell_type":"code","source":["#Function Signature:\n","def total_(words):\n","    total = 0\n","    for word in words:\n","        total += len(word)\n","    return total\n","my_list = [\"Norway\", \"Urge\", \"Malta\"]\n","print(\"Total letters:\", total_(my_list))\n",""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fJLpfzL53zHN","executionInfo":{"status":"ok","timestamp":1752848185429,"user_tz":-180,"elapsed":23,"user":{"displayName":"Nehemiah Kipchumba","userId":"09735398617109063840"}},"outputId":"08b1919b-0294-4af4-a616-d00d6ca2f3a2"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Total letters: 15\n"]}]},{"cell_type":"markdown","source":["- Challenge 3: Combine Lambda + List(10 Marks)\n","\n","- Problem:\n","    -  Use filter() and a lambda to return all numbers divisible by 3 in a list."],"metadata":{"id":"k4MZWoZV4BQv"}},{"cell_type":"code","source":["#My numbers\n","numbers = [3, 15, 6, 18, 39]\n","\n","# Filter with lambda(numbers div3)\n","div3 = filter(lambda number: number % 3 == 0, numbers)\n","\n","# print\n","print(\"Numbers divisible by 3:\", list(div3))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IVsBNLmo4F0C","executionInfo":{"status":"ok","timestamp":1752848185473,"user_tz":-180,"elapsed":36,"user":{"displayName":"Nehemiah Kipchumba","userId":"09735398617109063840"}},"outputId":"16d99232-97e7-45db-f906-38b0144c0312"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Numbers divisible by 3: [3, 15, 6, 18, 39]\n"]}]},{"cell_type":"markdown","source":["\n","- Challenge 4 (10 Marks)\n","- Task:\n","      - Implement a function dot_product that does the following:\n","      \n","      - NB:Copy the whole code and run the problem first(Task on””” tA & tB”””)\n"],"metadata":{"id":"VcZj7mzI4kwO"}},{"cell_type":"code","source":["# def dot_product(tA, tB):\n","#     \"\"\"\n","#     tA: a tuple of numbers\n","#     tB: a tuple of numbers of the same length as tA\n","#     Returns a tuple (length, dot product of tA and tB)\n","#     \"\"\"\n","#     total = 0\n","#     for i in range(len(tA)):\n","#         total += tA[i] * tB[i]\n","\n","def dot_prod(tA, tB):\n","    total = 0\n","    for i in range(len(tA)):\n","        total = total + (tA[i] * tB[i])\n","    return (len(tA), total)\n","a = (1, 2, 3)\n","b = (4, 5, 6)\n","\n","answer = dot_prod(a, b)\n","\n","print(\"Length of tuples:\", answer[0])\n","print(\"Dot prod:\", answer[1])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"itES8stG4rvy","executionInfo":{"status":"ok","timestamp":1752848185492,"user_tz":-180,"elapsed":15,"user":{"displayName":"Nehemiah Kipchumba","userId":"09735398617109063840"}},"outputId":"9f3d02e1-cb80-4506-80b4-047a3cc9989c"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Length of tuples: 3\n","Dot prod: 32\n"]}]}]}