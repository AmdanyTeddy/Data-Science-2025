# -*- coding: utf-8 -*-
"""lamech.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vfO441y2KkqbgRD1HHCDZBwfoFIHDLYr
"""

import string
#This Python program is a console-based Text & Number Analyzer that performs different
#operations based on user input. The main functionalities include:
    # String (text) analysis
    # Numerical statistics
    # Integer to binary conversion

def analyze_text(s: str) -> dict:
#Purpose: Analyzes a given string and returns statistics including
# Total characters,Number of vowels,Number of consonants,A sorted list of unique words,
# Number of digits,Number of punctuation marks,First and last index of a user-specified substring
    #"""Analyzes the input string and returns various statistics."""
    vowels = "aeiouAEIOU"
    consonants = set(string.ascii_letters) - set(vowels)
    punctuation_chars = set(string.punctuation)

    total_chars = 0
    vowel_count = 0
    consonant_count = 0
    digit_count = 0
    punctuation_count = 0

    # Index-based loop
    for i in range(len(s)):
        ch = s[i]
        total_chars += 1
        if ch in vowels:
            vowel_count += 1
        elif ch in consonants:
            consonant_count += 1
        elif ch.isdigit():
            digit_count += 1
        elif ch in punctuation_chars:
            punctuation_count += 1

    substring = input("Enter a substring to find in the text: ")
    first_occurrence = -1
    last_occurrence = -1

    # Manual search (direct loop)
    for i in range(len(s) - len(substring) + 1):
        if s[i:i + len(substring)] == substring:
            if first_occurrence == -1:
                first_occurrence = i
            last_occurrence = i

    # Unique words
    words = s.lower().split()
    cleaned_words = []
    for word in words:
        cleaned_word = ''.join(ch for ch in word if ch.isalnum())
        if cleaned_word:
            cleaned_words.append(cleaned_word)

    unique_words = sorted(set(cleaned_words))

    return {
        "total_characters": total_chars,
        "vowels": vowel_count,
        "consonants": consonant_count,
        "digits": digit_count,
        "punctuation": punctuation_count,
        "first_occurrence": first_occurrence,
        "last_occurrence": last_occurrence,
        "unique_words": unique_words
    }

def stats_numbers(nums: list[int]) -> dict:
#Purpose: Takes a list of integers and computes:
#Sum,Average,Minimum,Maximum,Numbers divisible by 3 or 5 (marked as "flagged")
    #"""Calculates statistics for a list of integers."""
    total = 0
    minimum = nums[0]
    maximum = nums[0]

    for num in nums:
        total += num
        if num < minimum:
            minimum = num
        if num > maximum:
            maximum = num

    average = total / len(nums)

    flagged_numbers = []
    for num in nums:
        if num % 3 == 0 or num % 5 == 0:
            flagged_numbers.append((num, "Divisible by 3 or 5"))

    return {
        "sum": total,
        "average": average,
        "min": minimum,
        "max": maximum,
        "flagged": flagged_numbers
    }

def to_binary(n: int) -> str:
    #Purpose: Converts an integer n into its binary representation (as a string).
    #"""Converts an integer to its binary representation using remainder division."""
    if n == 0:
        return "0"

    is_negative = n < 0
    n = abs(n)
    binary_digits = []

    while n > 0:
        remainder = n % 2
        binary_digits.append(str(remainder))
        n = n // 2

    binary_digits.reverse()
    binary_str = ''.join(binary_digits)
    return '-' + binary_str if is_negative else binary_str
def main_menu():
# Purpose: (Main) program loop that Shows a menu with 4 options
    #String Analysis,Numeric Statistics,Binary Converter,Exit
    #Select an option (1-4):
    #Takes user input to determine which operation to perform andRepeats until the user chooses to exit.
#Menu Options:
    #"""Drives the main application menu loop."""
    while True:
        print("\n=== Text & Number Analyzer ===")
        print("1. String Analysis")
        print("2. Numeric Statistics")
        print("3. Binary Converter")
        print("4. Exit")

        choice = input("Select an option (1-4): ")
#  Option 1: Asks the user to input a string → calls analyze_text().
        if choice == "1":
            text = input("Enter the text to analyze: ")
            result = analyze_text(text)
            print("\nText Analysis Results:")
            for key, value in result.items():
                print(f"{key}: {value}")
#  Option 2: Asks for comma-separated integers → parses and sends to stats_numbers().
        elif choice == "2":
            raw_input = input("Enter comma-separated integers: ")
            try:
                nums = [int(x.strip()) for x in raw_input.split(',')]
                result = stats_numbers(nums)
                print("\nNumeric Statistics:")
                for key, value in result.items():
                    if key == "flagged":
                        for item in value:
                            print(f"{item[0]}: {item[1]}")
                    else:
                        print(f"{key}: {value}")
            except ValueError:
                print("Invalid input. Please enter only integers separated by commas.")
 #  Option 3: Asks for a number → converts to binary using to_binary().
        elif choice == "3":
            try:
                number = int(input("Enter an integer: "))
                binary = to_binary(number)
                print(f"Binary representation: {binary}")
            except ValueError:
                print("Invalid input. Please enter a valid integer.")
 #  Option 4: Exits the program
        elif choice == "4":
            print("Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a number from 1 to 4.")



#An if __name__ == "__main__": block to start the program
if __name__ == "__main__":
 #A main_menu() function that handles user interaction and calls appropriate helper functions
    main_menu()