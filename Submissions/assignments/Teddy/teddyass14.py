# -*- coding: utf-8 -*-
"""TeddyAss14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1avcT_kSilbTPaAyAF0O2HG4I1CE2LfSH
"""

def student_score_summary(scores, threshold):
    """
    scores: a dictionary mapping student names (str) to total scores (int).
    threshold: an integer score threshold.

    Returns a list of student names who scored above the threshold.
    The list should be sorted alphabetically.
    """
    try:
        assert isinstance(scores, dict), "Scores must be a dictionary"
        assert isinstance(threshold, int), "Threshold must be an integer"

        result = [name for name, score in scores.items() if score > threshold]
        return sorted(result)
    except AssertionError as e:
        print(f"AssertionError: {e}")
    except Exception as e:
        print(f"Error: {e}")

# Example test cases:
students = {"Alice": 85, "Bob": 92, "Charlie": 78, "Daisy": 95}
print(student_score_summary(students, 80))
print(student_score_summary(students, 100))

def merge_inventory(inv1, inv2):
    """
    inv1 and inv2 are dictionaries mapping item names (str) to quantities (int).
    Returns a new dictionary that combines both inventories.
    If an item appears in both, their quantities are summed.
    """
    try:
        assert isinstance(inv1, dict) and isinstance(inv2, dict), "Both inputs must be dictionaries"

        merged = inv1.copy()
        for item, qty in inv2.items():
            if item in merged:
                merged[item] += qty
            else:
                merged[item] = qty
        return merged
    except AssertionError as e:
        print(f"AssertionError: {e}")
    except Exception as e:
        print(f"Error: {e}")

# Example test cases:
inv1 = {"pen": 10, "notebook": 5}
inv2 = {"notebook": 3, "eraser": 7}
print(merge_inventory(inv1, inv2))