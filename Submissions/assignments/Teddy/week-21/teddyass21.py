# -*- coding: utf-8 -*-
"""TeddyAss21.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FN9IGGx9UIatt6By_a4RNedKk4V-dV7N
"""

import os
import json
import base64
from cryptography.fernet import Fernet
from getpass import getpass

KEY_FILE = "vault.key"
VAULT_FILE = "vault.json"

# Encryption Key
def load_key():
    if not os.path.exists(KEY_FILE):
        key = Fernet.generate_key()
        with open(KEY_FILE, "wb") as f:
            f.write(key)
    else:
        with open(KEY_FILE, "rb") as f:
            key = f.read()
    return key

# Vault Load/Save
def load_vault():
    if not os.path.exists(VAULT_FILE):
        return []
    with open(VAULT_FILE, "r") as f:
        return json.load(f)

def save_vault(vault):
    with open(VAULT_FILE, "w") as f:
        json.dump(vault, f, indent=4)

# Encryption of the Password
def encrypt_password(password, fernet):
    return fernet.encrypt(password.encode()).decode()

def decrypt_password(token, fernet):
    return fernet.decrypt(token.encode()).decode()

# Creation of Username and Password function
def add_entry(vault, fernet):
    name = input("Enter service name like Gmail: ")
    username = input("Enter Username: ")
    password = getpass("Enter Password: ")
    encrypted = encrypt_password(password, fernet)
    vault.append({"name": name, "username": username, "password": encrypted})
    print("Password is added.")

# Get Username and Password function
def retrieve_entry(vault, fernet):
    keyword = input("Enter service name to search: ").lower()
    matches = [entry for entry in vault if keyword in entry["name"].lower()]
    if matches:
        for entry in matches:
            decrypted = decrypt_password(entry["password"], fernet)
            print(f"\nService: {entry['name']}")
            print(f"Username: {entry['username']}")
            print(f"Password: {decrypted}")
    else:
        print("No matching entries found.")

# Deleting the Password function
def delete_entry(vault):
    keyword = input("Enter service name to delete: ").lower()
    before = len(vault)
    vault[:] = [entry for entry in vault if keyword not in entry["name"].lower()]
    after = len(vault)
    if before != after:
        print("Entry deleted.")
    else:
        print("No matching entries found.")

# Command Line Interface section
def main():
    key = load_key()
    fernet = Fernet(key)
    vault = load_vault()

    while True:
        print("\n=== Password Vault ===")
        print("1. Add new password")
        print("2. Retrieve password")
        print("3. Delete password")
        print("4. Exit")

        choice = input("Choose an option: ")

        if choice == "1":
            add_entry(vault, fernet)
        elif choice == "2":
            retrieve_entry(vault, fernet)
        elif choice == "3":
            delete_entry(vault)
        elif choice == "4":
            save_vault(vault)
            print("Vault saved Succesfully.")
            break
        else:
            print("Invalid option.")

if __name__ == "__main__":
    main()