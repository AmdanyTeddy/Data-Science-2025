# -*- coding: utf-8 -*-
"""binary_bismark

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ohgo3932OIYyDI6-dDbI721lRsJLLCEg
"""

# Final Assignment Topic 4
# Assignment 1: Binary Name Tag Generator (For Loop + ASCII + Binary)
# Scenario
# Your mission: help your classmates get awesome binary name tags.
# Each student should input their first name, and your program will display:
# 1.	Each letter
# 2.	Its ASCII code
# 3.	Its 8-bit binary value

# Instructions
# 1.	Ask the user to enter their first name.
# 2.	For each character:
# •	Convert to ASCII using ord()
# •	Convert ASCII to binary using format(..., '08b')
# 3.	Print the result nicely.

# Sample Output
# Code Output:
# Name: ZOE
# Z → 90 → 01011010
# O → 79 → 01001111
# E → 69 → 01000101

#Prompt the user to enter their first name
name = input("Enter your first name: ")
#Iterates through each character
for char in name:
  ascii_code = ord(char)#ASCII value for standard ASCII characters
  binary_value = format(ascii_code, '08b')
#Prints the result
  print(f"{char} → {ascii_code} → {binary_value}")

# Assignment 2: Secret Binary Door Unlocker (Guess-and-Check + Binary + Loops)
# Scenario
# There's a secret door in your program, and it only opens when the correct code in binary is entered.
# The user must guess the decimal number hidden behind the binary code using guess-and-check logic.

# Instructions
# 1.	The program stores a secret binary string, like '1011' (which is 11).
# 2.	The user must guess the decimal number.
# 3.	Your program checks if the guess converted to binary matches the secret.
# 4.	Loop until the user guesses right, then print "Door Unlocked!".

# Code Output:
# Binary Door Code Challenge!
# Guess the number that matches the secret binary code: 1011
# Your guess: 8
# Binary of 8 → 1000 → ❌ Not a match.

# Your guess: 11
# Binary of 11 → 1011 → ✅ Door Unlocked!
secret_binary_code = '1011'
secret_decimal_code = int(secret_binary_code, 2)#

print("Binary Door Code Challenge!")

while True:
  try:
    guess = int(input(f"Guess the number that matches the secret binary code: {secret_binary_code}\nYour guess: "))
    guess_binary = format(guess, 'b')
    print(f"Binary of {guess} → {guess_binary}", end=" → ")

    if guess == secret_decimal_code:
      print(" Door Unlocked!")
      break
    else:
      print(" Not a match.")
  except ValueError:
    print("Invalid input. Please enter an integer.")

# Submission Instructions
# •	Save as: binary_your_name_tag.py
# •	Push to the GitHub class repo under /assignments/week4/
# •	Include 1 screenshot of your output
# Bonus Challenges (Optional for Fast Finishers)
# •	Modify the name tag to support lowercase and symbols.
# •	Change the door unlocker to let the user input their own binary code, and let the program reverse-engineer it (convert to decimal).
# •	Create a version that accepts fractional binary prices (like Binary Snack Machine!)

# NB:
# Both assignments help you practice loops, binary conversion, and string processing, while reinforcing how computers represent text and numbers.
# These aren't just fun — they're the foundation of how software talks to machines.

