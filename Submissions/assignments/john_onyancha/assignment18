{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMZFDICgAtYgpjUJ3y2CuDK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GSCItnzB2zf4","executionInfo":{"status":"ok","timestamp":1753705400367,"user_tz":-180,"elapsed":12,"user":{"displayName":"John Nyangara","userId":"16604179010077718360"}},"outputId":"70ebb083-9357-41eb-e2c7-0ac332922f80"},"outputs":[{"output_type":"stream","name":"stdout","text":["False\n"]}],"source":["#create a class book\n","class book:\n","\n","  def __init__(self,bk_title,bk_author,yearofpub,available_copies):\n","    ''' defining a class constructor that initializes a book object with four attributes'''\n","    self.bk_title=bk_title\n","    self.bk_author=bk_author\n","    self.yearpfpub=yearofpub\n","    self.available_copies=available_copies\n","\n","  def borrow_book(self):\n","    ''' defining a function that checks if the borrowed book is available'''\n","    if self.available_copies>0:\n","      self.available_copies-=1\n","    else:\n","        print(\"no copies available\")\n","\n","  def return_book(self):\n","      ''' updates the number of book upon returning'''\n","      self.available_copies+=1;\n","\n","  def is_similar_book(self,other):\n","      if self.bk_title==other.bk_title and self.bk_author==other.bk_title:\n","        return True\n","      else:\n","        return False\n","#creating an instances/object of the class book\n","book1=book(\"automating boring stuff with python\",\"sweigrat\",2012,10)\n","book5=book(\"remember\",\"lisa Genova\",2021,0)\n","\n","#accessing methods of a class using an object\n","book1.borrow_book()\n","book1.borrow_book()\n","book1.borrow_book()\n","book1.return_book()\n","\n","print(f'{book1.is_similar_book(book5)}')\n","\n","\n","\n","\n","\n","\n","\n"]}]}