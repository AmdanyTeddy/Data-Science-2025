# -*- coding: utf-8 -*-
"""assignment_14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SbtfOcI_Zh3VhcFmRMXtVxjQ_byv8x8B
"""

# Q1. student_score_summary
def student_score_summary(scores, cutoff):
    """
    scores: dict of {name: score}
    cutoff: int threshold
    Returns: list of names scoring above cutoff (alphabetical)
    """
    result = []
    for name, points in scores.items():
        if points > cutoff:
            result.append(name)

    result.sort()
    return result


# Try it out
print("Q1 Tests")
students = {"Alice": 85, "Bob": 92, "Charlie": 78, "Daisy": 95}
print(student_score_summary(students, 80))    # ['Alice','Bob','Daisy']
print(student_score_summary(students, 90))    # ['Bob','Daisy']
print(student_score_summary(students, 100))   # []
print()


# Q2. merge_inventory
def merge_inventory(inv1, inv2):
    """
    Combine two inventories (dicts).
    If item is in both, add the counts.
    """
    merged = inv1.copy()
    for item, qty in inv2.items():
        merged[item] = merged.get(item, 0) + qty
    return merged


# Alt version using set union
def merge_inventory_alt(inv1, inv2):
    all_items = set(inv1) | set(inv2)
    return {i: inv1.get(i, 0) + inv2.get(i, 0) for i in all_items}


# Try it out
print("Q2 Tests")
inv1 = {"pen": 10, "notebook": 5}
inv2 = {"notebook": 3, "eraser": 7}
print(merge_inventory(inv1, inv2))        # {'pen': 10, 'notebook': 8, 'eraser': 7}
print(merge_inventory_alt(inv1, inv2))    # same result

# extra checks
print(merge_inventory({}, {"pencil": 4})) # {'pencil': 4}
print(merge_inventory({"pen": 2}, {}))    # {'pen': 2}

