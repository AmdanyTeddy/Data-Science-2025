{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPyMM8wghBUGqLi5xBuxMQF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"VGyKmrz_JGDQ","executionInfo":{"status":"ok","timestamp":1750756134613,"user_tz":-180,"elapsed":3140,"user":{"displayName":"John Nyangara","userId":"16604179010077718360"}},"outputId":"b74e6179-f5bb-4001-974e-6648db48c8d7"},"outputs":[{"name":"stdout","output_type":"stream","text":["Enter a number:9\n"]},{"output_type":"execute_result","data":{"text/plain":["'9 is Divisible by 3'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":12}],"source":["# Write a lambda function that checks if a number is a multiple of 3\n","def div3(n,f1):\n","\n","  if f1(n)==True:\n","    isdev= f\"{n} is Divisible by 3\"\n","  else:\n","    isdev=f\"{n} is Not Divisible by 3\"\n","\n","  return isdev\n","userinput=int(input(\"Enter a number:\"))\n","div3(userinput,lambda x:x%3==0)\n","\n"]},{"cell_type":"code","source":["#Find the average of a list of numbers\n","def average(list):\n","  sum=0\n","  l=len(list1)\n","  for i in list1:\n","    sum+=i\n","  average=sum/l\n","  return average\n","list1=[1,2,3,4,5]\n","average(list1)\n"],"metadata":{"id":"GbtFmfRVKBXC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1750759095306,"user_tz":-180,"elapsed":12,"user":{"displayName":"John Nyangara","userId":"16604179010077718360"}},"outputId":"33ad8473-224b-464c-917a-daad174a99b7"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.0"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["# Find the total number of letters in a list of strings\n","def total_letters(words):\n","  sum=0\n","  for i in words:\n","    k=len(i)\n","    sum+=k\n","  return sum\n","cars=['lambo','pagani','tesla','bmw','audi','lexus','mercedes']\n","total_letters(cars)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YwK5BakWK-O_","executionInfo":{"status":"ok","timestamp":1750756697690,"user_tz":-180,"elapsed":8,"user":{"displayName":"John Nyangara","userId":"16604179010077718360"}},"outputId":"2a964712-c83e-409d-fc56-bc781b1a3f80"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["36"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["#divisibilty test for 3\n","def div3(n,f1):\n","  devval=[]\n","  for i in n:\n","    if f1(i)==True:\n","      devval.append(i)\n","    else:\n","      pass\n","\n","  return devval\n","\n","userinput=[1,2,3,4,5,6,7,8,9,10]\n","div3(userinput,lambda x:x%3==0)\n","\n","# apply=div3(filter(userinput,lambda x:x%3==0))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pk4qefHcOpi-","executionInfo":{"status":"ok","timestamp":1750762641132,"user_tz":-180,"elapsed":12,"user":{"displayName":"John Nyangara","userId":"16604179010077718360"}},"outputId":"3c41b4fe-a766-4787-a79d-24b62ee27fb1"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[3, 6, 9]"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["def dot_product(tA, tB):\n","    \"\"\"\n","    tA: a tuple of numbers\n","    tB: a tuple of numbers of the same length as tA\n","    Returns a tuple (length, dot product of tA and tB)\n","    \"\"\"\n","    total = 0\n","    for i in range(len(tA)):\n","        total += tA[i] * tB[i]\n","    return (len(tA), total)\n","\n","# Example:\n","print(dot_product((10, 12, 33,3), (24, 45, 76,3)))  # âžœ (3, 32)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3pxdcl4mQO9m","executionInfo":{"status":"ok","timestamp":1750758803552,"user_tz":-180,"elapsed":8,"user":{"displayName":"John Nyangara","userId":"16604179010077718360"}},"outputId":"793ff63c-27fe-4b5d-fb96-16c5143e5ca8"},"execution_count":38,"outputs":[{"output_type":"stream","name":"stdout","text":["(4, 3297)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"SPx4IPRfYG8b"},"execution_count":null,"outputs":[]}]}