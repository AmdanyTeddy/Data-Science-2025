# -*- coding: utf-8 -*-
"""asssignment_8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vuaFZAfX0Sxw0TAH8Z6nZvBSwKhcDjc-
"""

# Lambda function to check if a number is a multiple of 3
is_multiple_of_3 = lambda x: x % 3 == 0

# Example:
print(is_multiple_of_3(9))   # True
print(is_multiple_of_3(10))  # False

def average(L):
    if len(L) == 0:
        return 0  # or raise an error if preferred
    return sum(L) / len(L)

# Example:
print(average([10, 20, 30]))  # 20.0

def total_letters(words):
    return sum(len(word) for word in words)

# Example:
print(total_letters(["apple", "banana", "cat"]))  # 16

# Using filter and lambda to get numbers divisible by 3
def get_multiples_of_3(numbers):
    return list(filter(lambda x: x % 3 == 0, numbers))

# Example:
print(get_multiples_of_3([1, 3, 4, 6, 9, 10, 12]))  # [3, 6, 9, 12]

def dot_product(tA, tB):
    """
    tA: a tuple of numbers
    tB: a tuple of numbers of the same length as tA
    Returns a tuple (length, dot product of tA and tB)
    """
    total = 0
    for i in range(len(tA)):
        total += tA[i] * tB[i]
    return (len(tA), total)

# Example:
print(dot_product((1, 2, 3), (4, 5, 6)))  # âžœ (3, 32)

