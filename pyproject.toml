[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "data-science-grader"
version = "1.0.0"
description = "Automated grading system for data science assignments"
authors = [
    {name = "Data Science Instructor", email = "instructor@university.edu"}
]
dependencies = [
    "nbformat>=5.7.0",
    "jupyter>=1.0.0",
    "notebook>=6.0.0",
    "watchdog>=2.0.0",
    "pandas>=1.3.0",
    "numpy>=1.20.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pytest>=7.0.0",
    "psutil>=5.8.0"
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0"
]

[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | logs
)/
'''

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]  # Black compatibility
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    "logs",
    ".venv",
    ".tox",
    ".eggs",
    "*.egg"
]
per-file-ignores = [
    "__init__.py:F401",  # Allow unused imports in __init__.py
    "test_*.py:E501"     # Allow long lines in test files
]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "watchdog.*",
    "nbformat.*",
    "jupyter.*",
    "notebook.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    "test_debug_system.py"
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    "logs/*",
    "debug_*",
    "test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]